{
  "version": 3,
  "sources": ["../../@firebase/util/src/constants.ts", "../../@firebase/util/src/assert.ts", "../../@firebase/util/src/crypt.ts", "../../@firebase/util/src/deepCopy.ts", "../../@firebase/util/src/deferred.ts", "../../@firebase/util/src/emulator.ts", "../../@firebase/util/src/environment.ts", "../../@firebase/util/src/errors.ts", "../../@firebase/util/src/json.ts", "../../@firebase/util/src/jwt.ts", "../../@firebase/util/src/obj.ts", "../../@firebase/util/src/promise.ts", "../../@firebase/util/src/query.ts", "../../@firebase/util/src/sha1.ts", "../../@firebase/util/src/subscribe.ts", "../../@firebase/util/src/validation.ts", "../../@firebase/util/src/utf8.ts", "../../@firebase/util/src/uuid.ts", "../../@firebase/util/src/exponential_backoff.ts", "../../@firebase/util/src/formatters.ts", "../../@firebase/util/src/compat.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.\n */\n\nexport const CONSTANTS = {\n  /**\n   * @define {boolean} Whether this is the client Node.js SDK.\n   */\n  NODE_CLIENT: false,\n  /**\n   * @define {boolean} Whether this is the Admin Node.js SDK.\n   */\n  NODE_ADMIN: false,\n\n  /**\n   * Firebase SDK Version\n   */\n  SDK_VERSION: '${JSCORE_VERSION}'\n};\n", "/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CONSTANTS } from './constants';\n\n/**\n * Throws an error if the provided assertion is falsy\n */\nexport const assert = function (assertion: unknown, message: string): void {\n  if (!assertion) {\n    throw assertionError(message);\n  }\n};\n\n/**\n * Returns an Error object suitable for throwing.\n */\nexport const assertionError = function (message: string): Error {\n  return new Error(\n    'Firebase Database (' +\n      CONSTANTS.SDK_VERSION +\n      ') INTERNAL ASSERT FAILED: ' +\n      message\n  );\n};\n", "/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst stringToByteArray = function (str: string): number[] {\n  // TODO(user): Use native implementations if/when available\n  const out: number[] = [];\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i);\n    if (c < 128) {\n      out[p++] = c;\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192;\n      out[p++] = (c & 63) | 128;\n    } else if (\n      (c & 0xfc00) === 0xd800 &&\n      i + 1 < str.length &&\n      (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00\n    ) {\n      // Surrogate Pair\n      c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\n      out[p++] = (c >> 18) | 240;\n      out[p++] = ((c >> 12) & 63) | 128;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    } else {\n      out[p++] = (c >> 12) | 224;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    }\n  }\n  return out;\n};\n\n/**\n * Turns an array of numbers into the string given by the concatenation of the\n * characters to which the numbers correspond.\n * @param bytes Array of numbers representing characters.\n * @return Stringification of the array.\n */\nconst byteArrayToString = function (bytes: number[]): string {\n  // TODO(user): Use native implementations if/when available\n  const out: string[] = [];\n  let pos = 0,\n    c = 0;\n  while (pos < bytes.length) {\n    const c1 = bytes[pos++];\n    if (c1 < 128) {\n      out[c++] = String.fromCharCode(c1);\n    } else if (c1 > 191 && c1 < 224) {\n      const c2 = bytes[pos++];\n      out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\n    } else if (c1 > 239 && c1 < 365) {\n      // Surrogate Pair\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      const c4 = bytes[pos++];\n      const u =\n        (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\n        0x10000;\n      out[c++] = String.fromCharCode(0xd800 + (u >> 10));\n      out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\n    } else {\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      out[c++] = String.fromCharCode(\n        ((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63)\n      );\n    }\n  }\n  return out.join('');\n};\n\ninterface Base64 {\n  byteToCharMap_: { [key: number]: string } | null;\n  charToByteMap_: { [key: string]: number } | null;\n  byteToCharMapWebSafe_: { [key: number]: string } | null;\n  charToByteMapWebSafe_: { [key: string]: number } | null;\n  ENCODED_VALS_BASE: string;\n  readonly ENCODED_VALS: string;\n  readonly ENCODED_VALS_WEBSAFE: string;\n  HAS_NATIVE_SUPPORT: boolean;\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string;\n  encodeString(input: string, webSafe?: boolean): string;\n  decodeString(input: string, webSafe: boolean): string;\n  decodeStringToByteArray(input: string, webSafe: boolean): number[];\n  init_(): void;\n}\n\n// We define it as an object literal instead of a class because a class compiled down to es5 can't\n// be treeshaked. https://github.com/rollup/rollup/issues/1691\n// Static lookup maps, lazily populated by init_()\nexport const base64: Base64 = {\n  /**\n   * Maps bytes to characters.\n   */\n  byteToCharMap_: null,\n\n  /**\n   * Maps characters to bytes.\n   */\n  charToByteMap_: null,\n\n  /**\n   * Maps bytes to websafe characters.\n   * @private\n   */\n  byteToCharMapWebSafe_: null,\n\n  /**\n   * Maps websafe characters to bytes.\n   * @private\n   */\n  charToByteMapWebSafe_: null,\n\n  /**\n   * Our default alphabet, shared between\n   * ENCODED_VALS and ENCODED_VALS_WEBSAFE\n   */\n  ENCODED_VALS_BASE:\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\n\n  /**\n   * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\n   */\n  get ENCODED_VALS() {\n    return this.ENCODED_VALS_BASE + '+/=';\n  },\n\n  /**\n   * Our websafe alphabet.\n   */\n  get ENCODED_VALS_WEBSAFE() {\n    return this.ENCODED_VALS_BASE + '-_.';\n  },\n\n  /**\n   * Whether this browser supports the atob and btoa functions. This extension\n   * started at Mozilla but is now implemented by many browsers. We use the\n   * ASSUME_* variables to avoid pulling in the full useragent detection library\n   * but still allowing the standard per-browser compilations.\n   *\n   */\n  HAS_NATIVE_SUPPORT: typeof atob === 'function',\n\n  /**\n   * Base64-encode an array of bytes.\n   *\n   * @param input An array of bytes (numbers with\n   *     value in [0, 255]) to encode.\n   * @param webSafe Boolean indicating we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string {\n    if (!Array.isArray(input)) {\n      throw Error('encodeByteArray takes an array as a parameter');\n    }\n\n    this.init_();\n\n    const byteToCharMap = webSafe\n      ? this.byteToCharMapWebSafe_!\n      : this.byteToCharMap_!;\n\n    const output = [];\n\n    for (let i = 0; i < input.length; i += 3) {\n      const byte1 = input[i];\n      const haveByte2 = i + 1 < input.length;\n      const byte2 = haveByte2 ? input[i + 1] : 0;\n      const haveByte3 = i + 2 < input.length;\n      const byte3 = haveByte3 ? input[i + 2] : 0;\n\n      const outByte1 = byte1 >> 2;\n      const outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\n      let outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\n      let outByte4 = byte3 & 0x3f;\n\n      if (!haveByte3) {\n        outByte4 = 64;\n\n        if (!haveByte2) {\n          outByte3 = 64;\n        }\n      }\n\n      output.push(\n        byteToCharMap[outByte1],\n        byteToCharMap[outByte2],\n        byteToCharMap[outByte3],\n        byteToCharMap[outByte4]\n      );\n    }\n\n    return output.join('');\n  },\n\n  /**\n   * Base64-encode a string.\n   *\n   * @param input A string to encode.\n   * @param webSafe If true, we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeString(input: string, webSafe?: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return btoa(input);\n    }\n    return this.encodeByteArray(stringToByteArray(input), webSafe);\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * @param input to decode.\n   * @param webSafe True if we should use the\n   *     alternative alphabet.\n   * @return string representing the decoded value.\n   */\n  decodeString(input: string, webSafe: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return atob(input);\n    }\n    return byteArrayToString(this.decodeStringToByteArray(input, webSafe));\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * In base-64 decoding, groups of four characters are converted into three\n   * bytes.  If the encoder did not apply padding, the input length may not\n   * be a multiple of 4.\n   *\n   * In this case, the last group will have fewer than 4 characters, and\n   * padding will be inferred.  If the group has one or two characters, it decodes\n   * to one byte.  If the group has three characters, it decodes to two bytes.\n   *\n   * @param input Input to decode.\n   * @param webSafe True if we should use the web-safe alphabet.\n   * @return bytes representing the decoded value.\n   */\n  decodeStringToByteArray(input: string, webSafe: boolean): number[] {\n    this.init_();\n\n    const charToByteMap = webSafe\n      ? this.charToByteMapWebSafe_!\n      : this.charToByteMap_!;\n\n    const output: number[] = [];\n\n    for (let i = 0; i < input.length; ) {\n      const byte1 = charToByteMap[input.charAt(i++)];\n\n      const haveByte2 = i < input.length;\n      const byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\n      ++i;\n\n      const haveByte3 = i < input.length;\n      const byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      const haveByte4 = i < input.length;\n      const byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\n        throw Error();\n      }\n\n      const outByte1 = (byte1 << 2) | (byte2 >> 4);\n      output.push(outByte1);\n\n      if (byte3 !== 64) {\n        const outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\n        output.push(outByte2);\n\n        if (byte4 !== 64) {\n          const outByte3 = ((byte3 << 6) & 0xc0) | byte4;\n          output.push(outByte3);\n        }\n      }\n    }\n\n    return output;\n  },\n\n  /**\n   * Lazy static initialization function. Called before\n   * accessing any of the static map variables.\n   * @private\n   */\n  init_() {\n    if (!this.byteToCharMap_) {\n      this.byteToCharMap_ = {};\n      this.charToByteMap_ = {};\n      this.byteToCharMapWebSafe_ = {};\n      this.charToByteMapWebSafe_ = {};\n\n      // We want quick mappings back and forth, so we precompute two maps.\n      for (let i = 0; i < this.ENCODED_VALS.length; i++) {\n        this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\n        this.charToByteMap_[this.byteToCharMap_[i]] = i;\n        this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\n        this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\n\n        // Be forgiving when decoding and correctly decode both encodings.\n        if (i >= this.ENCODED_VALS_BASE.length) {\n          this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\n          this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\n        }\n      }\n    }\n  }\n};\n\n/**\n * URL-safe base64 encoding\n */\nexport const base64Encode = function (str: string): string {\n  const utf8Bytes = stringToByteArray(str);\n  return base64.encodeByteArray(utf8Bytes, true);\n};\n\n/**\n * URL-safe base64 encoding (without \".\" padding in the end).\n * e.g. Used in JSON Web Token (JWT) parts.\n */\nexport const base64urlEncodeWithoutPadding = function (str: string): string {\n  // Use base64url encoding and remove padding in the end (dot characters).\n  return base64Encode(str).replace(/\\./g, '');\n};\n\n/**\n * URL-safe base64 decoding\n *\n * NOTE: DO NOT use the global atob() function - it does NOT support the\n * base64Url variant encoding.\n *\n * @param str To be decoded\n * @return Decoded result, if possible\n */\nexport const base64Decode = function (str: string): string | null {\n  try {\n    return base64.decodeString(str, true);\n  } catch (e) {\n    console.error('base64Decode failed: ', e);\n  }\n  return null;\n};\n", "/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Do a deep-copy of basic JavaScript Objects or Arrays.\n */\nexport function deepCopy<T>(value: T): T {\n  return deepExtend(undefined, value) as T;\n}\n\n/**\n * Copy properties from source to target (recursively allows extension\n * of Objects and Arrays).  Scalar values in the target are over-written.\n * If target is undefined, an object of the appropriate type will be created\n * (and returned).\n *\n * We recursively copy all child properties of plain Objects in the source- so\n * that namespace- like dictionaries are merged.\n *\n * Note that the target can be a function, in which case the properties in\n * the source Object are copied onto it as static properties of the Function.\n *\n * Note: we don't merge __proto__ to prevent prototype pollution\n */\nexport function deepExtend(target: unknown, source: unknown): unknown {\n  if (!(source instanceof Object)) {\n    return source;\n  }\n\n  switch (source.constructor) {\n    case Date:\n      // Treat Dates like scalars; if the target date object had any child\n      // properties - they will be lost!\n      const dateValue = source as Date;\n      return new Date(dateValue.getTime());\n\n    case Object:\n      if (target === undefined) {\n        target = {};\n      }\n      break;\n    case Array:\n      // Always copy the array source and overwrite the target.\n      target = [];\n      break;\n\n    default:\n      // Not a plain Object - treat it as a scalar.\n      return source;\n  }\n\n  for (const prop in source) {\n    // use isValidKey to guard against prototype pollution. See https://snyk.io/vuln/SNYK-JS-LODASH-450202\n    if (!source.hasOwnProperty(prop) || !isValidKey(prop)) {\n      continue;\n    }\n    (target as Record<string, unknown>)[prop] = deepExtend(\n      (target as Record<string, unknown>)[prop],\n      (source as Record<string, unknown>)[prop]\n    );\n  }\n\n  return target;\n}\n\nfunction isValidKey(key: string): boolean {\n  return key !== '__proto__';\n}\n", "/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class Deferred<R> {\n  promise: Promise<R>;\n  reject: (value?: unknown) => void = () => {};\n  resolve: (value?: unknown) => void = () => {};\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = resolve as (value?: unknown) => void;\n      this.reject = reject as (value?: unknown) => void;\n    });\n  }\n\n  /**\n   * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around\n   * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\n   * and returns a node-style callback which will resolve or reject the Deferred's promise.\n   */\n  wrapCallback(\n    callback?: (error?: unknown, value?: unknown) => void\n  ): (error: unknown, value?: unknown) => void {\n    return (error, value?) => {\n      if (error) {\n        this.reject(error);\n      } else {\n        this.resolve(value);\n      }\n      if (typeof callback === 'function') {\n        // Attaching noop handler just in case developer wasn't expecting\n        // promises\n        this.promise.catch(() => {});\n\n        // Some of our callbacks don't expect a value and our own tests\n        // assert that the parameter length is 1\n        if (callback.length === 1) {\n          callback(error);\n        } else {\n          callback(error, value);\n        }\n      }\n    };\n  }\n}\n", "/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64urlEncodeWithoutPadding } from './crypt';\n\n// Firebase Auth tokens contain snake_case claims following the JWT standard / convention.\n/* eslint-disable camelcase */\n\nexport type FirebaseSignInProvider =\n  | 'custom'\n  | 'email'\n  | 'password'\n  | 'phone'\n  | 'anonymous'\n  | 'google.com'\n  | 'facebook.com'\n  | 'github.com'\n  | 'twitter.com'\n  | 'microsoft.com'\n  | 'apple.com';\n\ninterface FirebaseIdToken {\n  // Always set to https://securetoken.google.com/PROJECT_ID\n  iss: string;\n\n  // Always set to PROJECT_ID\n  aud: string;\n\n  // The user's unique ID\n  sub: string;\n\n  // The token issue time, in seconds since epoch\n  iat: number;\n\n  // The token expiry time, normally 'iat' + 3600\n  exp: number;\n\n  // The user's unique ID. Must be equal to 'sub'\n  user_id: string;\n\n  // The time the user authenticated, normally 'iat'\n  auth_time: number;\n\n  // The sign in provider, only set when the provider is 'anonymous'\n  provider_id?: 'anonymous';\n\n  // The user's primary email\n  email?: string;\n\n  // The user's email verification status\n  email_verified?: boolean;\n\n  // The user's primary phone number\n  phone_number?: string;\n\n  // The user's display name\n  name?: string;\n\n  // The user's profile photo URL\n  picture?: string;\n\n  // Information on all identities linked to this user\n  firebase: {\n    // The primary sign-in provider\n    sign_in_provider: FirebaseSignInProvider;\n\n    // A map of providers to the user's list of unique identifiers from\n    // each provider\n    identities?: { [provider in FirebaseSignInProvider]?: string[] };\n  };\n\n  // Custom claims set by the developer\n  [claim: string]: unknown;\n\n  uid?: never; // Try to catch a common mistake of \"uid\" (should be \"sub\" instead).\n}\n\nexport type EmulatorMockTokenOptions = ({ user_id: string } | { sub: string }) &\n  Partial<FirebaseIdToken>;\n\nexport function createMockUserToken(\n  token: EmulatorMockTokenOptions,\n  projectId?: string\n): string {\n  if (token.uid) {\n    throw new Error(\n      'The \"uid\" field is no longer supported by mockUserToken. Please use \"sub\" instead for Firebase Auth User ID.'\n    );\n  }\n  // Unsecured JWTs use \"none\" as the algorithm.\n  const header = {\n    alg: 'none',\n    type: 'JWT'\n  };\n\n  const project = projectId || 'demo-project';\n  const iat = token.iat || 0;\n  const sub = token.sub || token.user_id;\n  if (!sub) {\n    throw new Error(\"mockUserToken must contain 'sub' or 'user_id' field!\");\n  }\n\n  const payload: FirebaseIdToken = {\n    // Set all required fields to decent defaults\n    iss: `https://securetoken.google.com/${project}`,\n    aud: project,\n    iat,\n    exp: iat + 3600,\n    auth_time: iat,\n    sub,\n    user_id: sub,\n    firebase: {\n      sign_in_provider: 'custom',\n      identities: {}\n    },\n\n    // Override with user options\n    ...token\n  };\n\n  // Unsecured JWTs use the empty string as a signature.\n  const signature = '';\n  return [\n    base64urlEncodeWithoutPadding(JSON.stringify(header)),\n    base64urlEncodeWithoutPadding(JSON.stringify(payload)),\n    signature\n  ].join('.');\n}\n", "/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CONSTANTS } from './constants';\n\n/**\n * Returns navigator.userAgent string or '' if it's not defined.\n * @return user agent string\n */\nexport function getUA(): string {\n  if (\n    typeof navigator !== 'undefined' &&\n    typeof navigator['userAgent'] === 'string'\n  ) {\n    return navigator['userAgent'];\n  } else {\n    return '';\n  }\n}\n\n/**\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\n *\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap\n * in the Ripple emulator) nor Cordova `onDeviceReady`, which would normally\n * wait for a callback.\n */\nexport function isMobileCordova(): boolean {\n  return (\n    typeof window !== 'undefined' &&\n    // @ts-ignore Setting up an broadly applicable index signature for Window\n    // just to deal with this case would probably be a bad idea.\n    !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\n    /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA())\n  );\n}\n\n/**\n * Detect Node.js.\n *\n * @return true if Node.js environment is detected.\n */\n// Node detection logic from: https://github.com/iliakan/detect-node/\nexport function isNode(): boolean {\n  try {\n    return (\n      Object.prototype.toString.call(global.process) === '[object process]'\n    );\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Detect Browser Environment\n */\nexport function isBrowser(): boolean {\n  return typeof self === 'object' && self.self === self;\n}\n\n/**\n * Detect browser extensions (Chrome and Firefox at least).\n */\ninterface BrowserRuntime {\n  id?: unknown;\n}\ndeclare const chrome: { runtime?: BrowserRuntime };\ndeclare const browser: { runtime?: BrowserRuntime };\nexport function isBrowserExtension(): boolean {\n  const runtime =\n    typeof chrome === 'object'\n      ? chrome.runtime\n      : typeof browser === 'object'\n      ? browser.runtime\n      : undefined;\n  return typeof runtime === 'object' && runtime.id !== undefined;\n}\n\n/**\n * Detect React Native.\n *\n * @return true if ReactNative environment is detected.\n */\nexport function isReactNative(): boolean {\n  return (\n    typeof navigator === 'object' && navigator['product'] === 'ReactNative'\n  );\n}\n\n/** Detects Electron apps. */\nexport function isElectron(): boolean {\n  return getUA().indexOf('Electron/') >= 0;\n}\n\n/** Detects Internet Explorer. */\nexport function isIE(): boolean {\n  const ua = getUA();\n  return ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;\n}\n\n/** Detects Universal Windows Platform apps. */\nexport function isUWP(): boolean {\n  return getUA().indexOf('MSAppHost/') >= 0;\n}\n\n/**\n * Detect whether the current SDK build is the Node version.\n *\n * @return true if it's the Node SDK build.\n */\nexport function isNodeSdk(): boolean {\n  return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;\n}\n\n/** Returns true if we are running in Safari. */\nexport function isSafari(): boolean {\n  return (\n    !isNode() &&\n    navigator.userAgent.includes('Safari') &&\n    !navigator.userAgent.includes('Chrome')\n  );\n}\n\n/**\n * This method checks if indexedDB is supported by current browser/service worker context\n * @return true if indexedDB is supported by current browser/service worker context\n */\nexport function isIndexedDBAvailable(): boolean {\n  return typeof indexedDB === 'object';\n}\n\n/**\n * This method validates browser/sw context for indexedDB by opening a dummy indexedDB database and reject\n * if errors occur during the database open operation.\n *\n * @throws exception if current browser/sw context can't run idb.open (ex: Safari iframe, Firefox\n * private browsing)\n */\nexport function validateIndexedDBOpenable(): Promise<boolean> {\n  return new Promise((resolve, reject) => {\n    try {\n      let preExist: boolean = true;\n      const DB_CHECK_NAME =\n        'validate-browser-context-for-indexeddb-analytics-module';\n      const request = self.indexedDB.open(DB_CHECK_NAME);\n      request.onsuccess = () => {\n        request.result.close();\n        // delete database only when it doesn't pre-exist\n        if (!preExist) {\n          self.indexedDB.deleteDatabase(DB_CHECK_NAME);\n        }\n        resolve(true);\n      };\n      request.onupgradeneeded = () => {\n        preExist = false;\n      };\n\n      request.onerror = () => {\n        reject(request.error?.message || '');\n      };\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\n\n/**\n *\n * This method checks whether cookie is enabled within current browser\n * @return true if cookie is enabled within current browser\n */\nexport function areCookiesEnabled(): boolean {\n  if (typeof navigator === 'undefined' || !navigator.cookieEnabled) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * Polyfill for `globalThis` object.\n * @returns the `globalThis` object for the given environment.\n */\nexport function getGlobal(): typeof globalThis {\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n  throw new Error('Unable to locate global object.');\n}\n", "/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Standardized Firebase Error.\n *\n * Usage:\n *\n *   // Typescript string literals for type-safe codes\n *   type Err =\n *     'unknown' |\n *     'object-not-found'\n *     ;\n *\n *   // Closure enum for type-safe error codes\n *   // at-enum {string}\n *   var Err = {\n *     UNKNOWN: 'unknown',\n *     OBJECT_NOT_FOUND: 'object-not-found',\n *   }\n *\n *   let errors: Map<Err, string> = {\n *     'generic-error': \"Unknown error\",\n *     'file-not-found': \"Could not find file: {$file}\",\n *   };\n *\n *   // Type-safe function - must pass a valid error code as param.\n *   let error = new ErrorFactory<Err>('service', 'Service', errors);\n *\n *   ...\n *   throw error.create(Err.GENERIC);\n *   ...\n *   throw error.create(Err.FILE_NOT_FOUND, {'file': fileName});\n *   ...\n *   // Service: Could not file file: foo.txt (service/file-not-found).\n *\n *   catch (e) {\n *     assert(e.message === \"Could not find file: foo.txt.\");\n *     if ((e as FirebaseError)?.code === 'service/file-not-found') {\n *       console.log(\"Could not read file: \" + e['file']);\n *     }\n *   }\n */\n\nexport type ErrorMap<ErrorCode extends string> = {\n  readonly [K in ErrorCode]: string;\n};\n\nconst ERROR_NAME = 'FirebaseError';\n\nexport interface StringLike {\n  toString(): string;\n}\n\nexport interface ErrorData {\n  [key: string]: unknown;\n}\n\n// Based on code from:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\nexport class FirebaseError extends Error {\n  /** The custom name for all FirebaseErrors. */\n  readonly name: string = ERROR_NAME;\n\n  constructor(\n    /** The error code for this error. */\n    readonly code: string,\n    message: string,\n    /** Custom data for this error. */\n    public customData?: Record<string, unknown>\n  ) {\n    super(message);\n\n    // Fix For ES5\n    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, FirebaseError.prototype);\n\n    // Maintains proper stack trace for where our error was thrown.\n    // Only available on V8.\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ErrorFactory.prototype.create);\n    }\n  }\n}\n\nexport class ErrorFactory<\n  ErrorCode extends string,\n  ErrorParams extends { readonly [K in ErrorCode]?: ErrorData } = {}\n> {\n  constructor(\n    private readonly service: string,\n    private readonly serviceName: string,\n    private readonly errors: ErrorMap<ErrorCode>\n  ) {}\n\n  create<K extends ErrorCode>(\n    code: K,\n    ...data: K extends keyof ErrorParams ? [ErrorParams[K]] : []\n  ): FirebaseError {\n    const customData = (data[0] as ErrorData) || {};\n    const fullCode = `${this.service}/${code}`;\n    const template = this.errors[code];\n\n    const message = template ? replaceTemplate(template, customData) : 'Error';\n    // Service Name: Error message (service/code).\n    const fullMessage = `${this.serviceName}: ${message} (${fullCode}).`;\n\n    const error = new FirebaseError(fullCode, fullMessage, customData);\n\n    return error;\n  }\n}\n\nfunction replaceTemplate(template: string, data: ErrorData): string {\n  return template.replace(PATTERN, (_, key) => {\n    const value = data[key];\n    return value != null ? String(value) : `<${key}?>`;\n  });\n}\n\nconst PATTERN = /\\{\\$([^}]+)}/g;\n", "/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Evaluates a JSON string into a javascript object.\n *\n * @param {string} str A string containing JSON.\n * @return {*} The javascript object representing the specified JSON.\n */\nexport function jsonEval(str: string): unknown {\n  return JSON.parse(str);\n}\n\n/**\n * Returns JSON representing a javascript object.\n * @param {*} data Javascript object to be stringified.\n * @return {string} The JSON contents of the object.\n */\nexport function stringify(data: unknown): string {\n  return JSON.stringify(data);\n}\n", "/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64Decode } from './crypt';\nimport { jsonEval } from './json';\n\ninterface Claims {\n  [key: string]: {};\n}\n\ninterface DecodedToken {\n  header: object;\n  claims: Claims;\n  data: object;\n  signature: string;\n}\n\n/**\n * Decodes a Firebase auth. token into constituent parts.\n *\n * Notes:\n * - May return with invalid / incomplete claims if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const decode = function (token: string): DecodedToken {\n  let header = {},\n    claims: Claims = {},\n    data = {},\n    signature = '';\n\n  try {\n    const parts = token.split('.');\n    header = jsonEval(base64Decode(parts[0]) || '') as object;\n    claims = jsonEval(base64Decode(parts[1]) || '') as Claims;\n    signature = parts[2];\n    data = claims['d'] || {};\n    delete claims['d'];\n  } catch (e) {}\n\n  return {\n    header,\n    claims,\n    data,\n    signature\n  };\n};\n\ninterface DecodedToken {\n  header: object;\n  claims: Claims;\n  data: object;\n  signature: string;\n}\n\n/**\n * Decodes a Firebase auth. token and checks the validity of its time-based claims. Will return true if the\n * token is within the time window authorized by the 'nbf' (not-before) and 'iat' (issued-at) claims.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const isValidTimestamp = function (token: string): boolean {\n  const claims: Claims = decode(token).claims;\n  const now: number = Math.floor(new Date().getTime() / 1000);\n  let validSince: number = 0,\n    validUntil: number = 0;\n\n  if (typeof claims === 'object') {\n    if (claims.hasOwnProperty('nbf')) {\n      validSince = claims['nbf'] as number;\n    } else if (claims.hasOwnProperty('iat')) {\n      validSince = claims['iat'] as number;\n    }\n\n    if (claims.hasOwnProperty('exp')) {\n      validUntil = claims['exp'] as number;\n    } else {\n      // token will expire after 24h by default\n      validUntil = validSince + 86400;\n    }\n  }\n\n  return (\n    !!now &&\n    !!validSince &&\n    !!validUntil &&\n    now >= validSince &&\n    now <= validUntil\n  );\n};\n\n/**\n * Decodes a Firebase auth. token and returns its issued at time if valid, null otherwise.\n *\n * Notes:\n * - May return null if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const issuedAtTime = function (token: string): number | null {\n  const claims: Claims = decode(token).claims;\n  if (typeof claims === 'object' && claims.hasOwnProperty('iat')) {\n    return claims['iat'] as number;\n  }\n  return null;\n};\n\n/**\n * Decodes a Firebase auth. token and checks the validity of its format. Expects a valid issued-at time.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const isValidFormat = function (token: string): boolean {\n  const decoded = decode(token),\n    claims = decoded.claims;\n\n  return !!claims && typeof claims === 'object' && claims.hasOwnProperty('iat');\n};\n\n/**\n * Attempts to peer into an auth token and determine if it's an admin auth token by looking at the claims portion.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const isAdmin = function (token: string): boolean {\n  const claims: Claims = decode(token).claims;\n  return typeof claims === 'object' && claims['admin'] === true;\n};\n", "/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function contains<T extends object>(obj: T, key: string): boolean {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexport function safeGet<T extends object, K extends keyof T>(\n  obj: T,\n  key: K\n): T[K] | undefined {\n  if (Object.prototype.hasOwnProperty.call(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\n\nexport function isEmpty(obj: object): obj is {} {\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function map<K extends string, V, U>(\n  obj: { [key in K]: V },\n  fn: (value: V, key: K, obj: { [key in K]: V }) => U,\n  contextObj?: unknown\n): { [key in K]: U } {\n  const res: Partial<{ [key in K]: U }> = {};\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      res[key] = fn.call(contextObj, obj[key], key, obj);\n    }\n  }\n  return res as { [key in K]: U };\n}\n\n/**\n * Deep equal two objects. Support Arrays and Objects.\n */\nexport function deepEqual(a: object, b: object): boolean {\n  if (a === b) {\n    return true;\n  }\n\n  const aKeys = Object.keys(a);\n  const bKeys = Object.keys(b);\n  for (const k of aKeys) {\n    if (!bKeys.includes(k)) {\n      return false;\n    }\n\n    const aProp = (a as Record<string, unknown>)[k];\n    const bProp = (b as Record<string, unknown>)[k];\n    if (isObject(aProp) && isObject(bProp)) {\n      if (!deepEqual(aProp, bProp)) {\n        return false;\n      }\n    } else if (aProp !== bProp) {\n      return false;\n    }\n  }\n\n  for (const k of bKeys) {\n    if (!aKeys.includes(k)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction isObject(thing: unknown): thing is object {\n  return thing !== null && typeof thing === 'object';\n}\n", "/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred } from './deferred';\n\n/**\n * Rejects if the given promise doesn't resolve in timeInMS milliseconds.\n * @internal\n */\nexport function promiseWithTimeout<T>(\n  promise: Promise<T>,\n  timeInMS = 2000\n): Promise<T> {\n  const deferredPromise = new Deferred<T>();\n  setTimeout(() => deferredPromise.reject('timeout!'), timeInMS);\n  promise.then(deferredPromise.resolve, deferredPromise.reject);\n  return deferredPromise.promise;\n}\n", "/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a\n * params object (e.g. {arg: 'val', arg2: 'val2'})\n * Note: You must prepend it with ? when adding it to a URL.\n */\nexport function querystring(querystringParams: {\n  [key: string]: string | number;\n}): string {\n  const params = [];\n  for (const [key, value] of Object.entries(querystringParams)) {\n    if (Array.isArray(value)) {\n      value.forEach(arrayVal => {\n        params.push(\n          encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal)\n        );\n      });\n    } else {\n      params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\n    }\n  }\n  return params.length ? '&' + params.join('&') : '';\n}\n\n/**\n * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object\n * (e.g. {arg: 'val', arg2: 'val2'})\n */\nexport function querystringDecode(querystring: string): Record<string, string> {\n  const obj: Record<string, string> = {};\n  const tokens = querystring.replace(/^\\?/, '').split('&');\n\n  tokens.forEach(token => {\n    if (token) {\n      const [key, value] = token.split('=');\n      obj[decodeURIComponent(key)] = decodeURIComponent(value);\n    }\n  });\n  return obj;\n}\n\n/**\n * Extract the query string part of a URL, including the leading question mark (if present).\n */\nexport function extractQuerystring(url: string): string {\n  const queryStart = url.indexOf('?');\n  if (!queryStart) {\n    return '';\n  }\n  const fragmentStart = url.indexOf('#', queryStart);\n  return url.substring(\n    queryStart,\n    fragmentStart > 0 ? fragmentStart : undefined\n  );\n}\n", "/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview SHA-1 cryptographic hash.\n * Variable names follow the notation in FIPS PUB 180-3:\n * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.\n *\n * Usage:\n *   var sha1 = new sha1();\n *   sha1.update(bytes);\n *   var hash = sha1.digest();\n *\n * Performance:\n *   Chrome 23:   ~400 Mbit/s\n *   Firefox 16:  ~250 Mbit/s\n *\n */\n\n/**\n * SHA-1 cryptographic hash constructor.\n *\n * The properties declared here are discussed in the above algorithm document.\n * @constructor\n * @final\n * @struct\n */\nexport class Sha1 {\n  /**\n   * Holds the previous values of accumulated variables a-e in the compress_\n   * function.\n   * @private\n   */\n  private chain_: number[] = [];\n\n  /**\n   * A buffer holding the partially computed hash result.\n   * @private\n   */\n  private buf_: number[] = [];\n\n  /**\n   * An array of 80 bytes, each a part of the message to be hashed.  Referred to\n   * as the message schedule in the docs.\n   * @private\n   */\n  private W_: number[] = [];\n\n  /**\n   * Contains data needed to pad messages less than 64 bytes.\n   * @private\n   */\n  private pad_: number[] = [];\n\n  /**\n   * @private {number}\n   */\n  private inbuf_: number = 0;\n\n  /**\n   * @private {number}\n   */\n  private total_: number = 0;\n\n  blockSize: number;\n\n  constructor() {\n    this.blockSize = 512 / 8;\n\n    this.pad_[0] = 128;\n    for (let i = 1; i < this.blockSize; ++i) {\n      this.pad_[i] = 0;\n    }\n\n    this.reset();\n  }\n\n  reset(): void {\n    this.chain_[0] = 0x67452301;\n    this.chain_[1] = 0xefcdab89;\n    this.chain_[2] = 0x98badcfe;\n    this.chain_[3] = 0x10325476;\n    this.chain_[4] = 0xc3d2e1f0;\n\n    this.inbuf_ = 0;\n    this.total_ = 0;\n  }\n\n  /**\n   * Internal compress helper function.\n   * @param buf Block to compress.\n   * @param offset Offset of the block in the buffer.\n   * @private\n   */\n  compress_(buf: number[] | Uint8Array | string, offset?: number): void {\n    if (!offset) {\n      offset = 0;\n    }\n\n    const W = this.W_;\n\n    // get 16 big endian words\n    if (typeof buf === 'string') {\n      for (let i = 0; i < 16; i++) {\n        // TODO(user): [bug 8140122] Recent versions of Safari for Mac OS and iOS\n        // have a bug that turns the post-increment ++ operator into pre-increment\n        // during JIT compilation.  We have code that depends heavily on SHA-1 for\n        // correctness and which is affected by this bug, so I've removed all uses\n        // of post-increment ++ in which the result value is used.  We can revert\n        // this change once the Safari bug\n        // (https://bugs.webkit.org/show_bug.cgi?id=109036) has been fixed and\n        // most clients have been updated.\n        W[i] =\n          (buf.charCodeAt(offset) << 24) |\n          (buf.charCodeAt(offset + 1) << 16) |\n          (buf.charCodeAt(offset + 2) << 8) |\n          buf.charCodeAt(offset + 3);\n        offset += 4;\n      }\n    } else {\n      for (let i = 0; i < 16; i++) {\n        W[i] =\n          (buf[offset] << 24) |\n          (buf[offset + 1] << 16) |\n          (buf[offset + 2] << 8) |\n          buf[offset + 3];\n        offset += 4;\n      }\n    }\n\n    // expand to 80 words\n    for (let i = 16; i < 80; i++) {\n      const t = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\n      W[i] = ((t << 1) | (t >>> 31)) & 0xffffffff;\n    }\n\n    let a = this.chain_[0];\n    let b = this.chain_[1];\n    let c = this.chain_[2];\n    let d = this.chain_[3];\n    let e = this.chain_[4];\n    let f, k;\n\n    // TODO(user): Try to unroll this loop to speed up the computation.\n    for (let i = 0; i < 80; i++) {\n      if (i < 40) {\n        if (i < 20) {\n          f = d ^ (b & (c ^ d));\n          k = 0x5a827999;\n        } else {\n          f = b ^ c ^ d;\n          k = 0x6ed9eba1;\n        }\n      } else {\n        if (i < 60) {\n          f = (b & c) | (d & (b | c));\n          k = 0x8f1bbcdc;\n        } else {\n          f = b ^ c ^ d;\n          k = 0xca62c1d6;\n        }\n      }\n\n      const t = (((a << 5) | (a >>> 27)) + f + e + k + W[i]) & 0xffffffff;\n      e = d;\n      d = c;\n      c = ((b << 30) | (b >>> 2)) & 0xffffffff;\n      b = a;\n      a = t;\n    }\n\n    this.chain_[0] = (this.chain_[0] + a) & 0xffffffff;\n    this.chain_[1] = (this.chain_[1] + b) & 0xffffffff;\n    this.chain_[2] = (this.chain_[2] + c) & 0xffffffff;\n    this.chain_[3] = (this.chain_[3] + d) & 0xffffffff;\n    this.chain_[4] = (this.chain_[4] + e) & 0xffffffff;\n  }\n\n  update(bytes?: number[] | Uint8Array | string, length?: number): void {\n    // TODO(johnlenz): tighten the function signature and remove this check\n    if (bytes == null) {\n      return;\n    }\n\n    if (length === undefined) {\n      length = bytes.length;\n    }\n\n    const lengthMinusBlock = length - this.blockSize;\n    let n = 0;\n    // Using local instead of member variables gives ~5% speedup on Firefox 16.\n    const buf = this.buf_;\n    let inbuf = this.inbuf_;\n\n    // The outer while loop should execute at most twice.\n    while (n < length) {\n      // When we have no data in the block to top up, we can directly process the\n      // input buffer (assuming it contains sufficient data). This gives ~25%\n      // speedup on Chrome 23 and ~15% speedup on Firefox 16, but requires that\n      // the data is provided in large chunks (or in multiples of 64 bytes).\n      if (inbuf === 0) {\n        while (n <= lengthMinusBlock) {\n          this.compress_(bytes, n);\n          n += this.blockSize;\n        }\n      }\n\n      if (typeof bytes === 'string') {\n        while (n < length) {\n          buf[inbuf] = bytes.charCodeAt(n);\n          ++inbuf;\n          ++n;\n          if (inbuf === this.blockSize) {\n            this.compress_(buf);\n            inbuf = 0;\n            // Jump to the outer loop so we use the full-block optimization.\n            break;\n          }\n        }\n      } else {\n        while (n < length) {\n          buf[inbuf] = bytes[n];\n          ++inbuf;\n          ++n;\n          if (inbuf === this.blockSize) {\n            this.compress_(buf);\n            inbuf = 0;\n            // Jump to the outer loop so we use the full-block optimization.\n            break;\n          }\n        }\n      }\n    }\n\n    this.inbuf_ = inbuf;\n    this.total_ += length;\n  }\n\n  /** @override */\n  digest(): number[] {\n    const digest: number[] = [];\n    let totalBits = this.total_ * 8;\n\n    // Add pad 0x80 0x00*.\n    if (this.inbuf_ < 56) {\n      this.update(this.pad_, 56 - this.inbuf_);\n    } else {\n      this.update(this.pad_, this.blockSize - (this.inbuf_ - 56));\n    }\n\n    // Add # bits.\n    for (let i = this.blockSize - 1; i >= 56; i--) {\n      this.buf_[i] = totalBits & 255;\n      totalBits /= 256; // Don't use bit-shifting here!\n    }\n\n    this.compress_(this.buf_);\n\n    let n = 0;\n    for (let i = 0; i < 5; i++) {\n      for (let j = 24; j >= 0; j -= 8) {\n        digest[n] = (this.chain_[i] >> j) & 255;\n        ++n;\n      }\n    }\n    return digest;\n  }\n}\n", "/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport type NextFn<T> = (value: T) => void;\nexport type ErrorFn = (error: Error) => void;\nexport type CompleteFn = () => void;\n\nexport interface Observer<T> {\n  // Called once for each value in a stream of values.\n  next: NextFn<T>;\n\n  // A stream terminates by a single call to EITHER error() or complete().\n  error: ErrorFn;\n\n  // No events will be sent to next() once complete() is called.\n  complete: CompleteFn;\n}\n\nexport type PartialObserver<T> = Partial<Observer<T>>;\n\n// TODO: Support also Unsubscribe.unsubscribe?\nexport type Unsubscribe = () => void;\n\n/**\n * The Subscribe interface has two forms - passing the inline function\n * callbacks, or a object interface with callback properties.\n */\nexport interface Subscribe<T> {\n  (next?: NextFn<T>, error?: ErrorFn, complete?: CompleteFn): Unsubscribe;\n  (observer: PartialObserver<T>): Unsubscribe;\n}\n\nexport interface Observable<T> {\n  // Subscribe method\n  subscribe: Subscribe<T>;\n}\n\nexport type Executor<T> = (observer: Observer<T>) => void;\n\n/**\n * Helper to make a Subscribe function (just like Promise helps make a\n * Thenable).\n *\n * @param executor Function which can make calls to a single Observer\n *     as a proxy.\n * @param onNoObservers Callback when count of Observers goes to zero.\n */\nexport function createSubscribe<T>(\n  executor: Executor<T>,\n  onNoObservers?: Executor<T>\n): Subscribe<T> {\n  const proxy = new ObserverProxy<T>(executor, onNoObservers);\n  return proxy.subscribe.bind(proxy);\n}\n\n/**\n * Implement fan-out for any number of Observers attached via a subscribe\n * function.\n */\nclass ObserverProxy<T> implements Observer<T> {\n  private observers: Array<Observer<T>> | undefined = [];\n  private unsubscribes: Unsubscribe[] = [];\n  private onNoObservers: Executor<T> | undefined;\n  private observerCount = 0;\n  // Micro-task scheduling by calling task.then().\n  private task = Promise.resolve();\n  private finalized = false;\n  private finalError?: Error;\n\n  /**\n   * @param executor Function which can make calls to a single Observer\n   *     as a proxy.\n   * @param onNoObservers Callback when count of Observers goes to zero.\n   */\n  constructor(executor: Executor<T>, onNoObservers?: Executor<T>) {\n    this.onNoObservers = onNoObservers;\n    // Call the executor asynchronously so subscribers that are called\n    // synchronously after the creation of the subscribe function\n    // can still receive the very first value generated in the executor.\n    this.task\n      .then(() => {\n        executor(this);\n      })\n      .catch(e => {\n        this.error(e);\n      });\n  }\n\n  next(value: T): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.next(value);\n    });\n  }\n\n  error(error: Error): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.error(error);\n    });\n    this.close(error);\n  }\n\n  complete(): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.complete();\n    });\n    this.close();\n  }\n\n  /**\n   * Subscribe function that can be used to add an Observer to the fan-out list.\n   *\n   * - We require that no event is sent to a subscriber sychronously to their\n   *   call to subscribe().\n   */\n  subscribe(\n    nextOrObserver?: NextFn<T> | PartialObserver<T>,\n    error?: ErrorFn,\n    complete?: CompleteFn\n  ): Unsubscribe {\n    let observer: Observer<T>;\n\n    if (\n      nextOrObserver === undefined &&\n      error === undefined &&\n      complete === undefined\n    ) {\n      throw new Error('Missing Observer.');\n    }\n\n    // Assemble an Observer object when passed as callback functions.\n    if (\n      implementsAnyMethods(nextOrObserver as { [key: string]: unknown }, [\n        'next',\n        'error',\n        'complete'\n      ])\n    ) {\n      observer = nextOrObserver as Observer<T>;\n    } else {\n      observer = {\n        next: nextOrObserver as NextFn<T>,\n        error,\n        complete\n      } as Observer<T>;\n    }\n\n    if (observer.next === undefined) {\n      observer.next = noop as NextFn<T>;\n    }\n    if (observer.error === undefined) {\n      observer.error = noop as ErrorFn;\n    }\n    if (observer.complete === undefined) {\n      observer.complete = noop as CompleteFn;\n    }\n\n    const unsub = this.unsubscribeOne.bind(this, this.observers!.length);\n\n    // Attempt to subscribe to a terminated Observable - we\n    // just respond to the Observer with the final error or complete\n    // event.\n    if (this.finalized) {\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.task.then(() => {\n        try {\n          if (this.finalError) {\n            observer.error(this.finalError);\n          } else {\n            observer.complete();\n          }\n        } catch (e) {\n          // nothing\n        }\n        return;\n      });\n    }\n\n    this.observers!.push(observer as Observer<T>);\n\n    return unsub;\n  }\n\n  // Unsubscribe is synchronous - we guarantee that no events are sent to\n  // any unsubscribed Observer.\n  private unsubscribeOne(i: number): void {\n    if (this.observers === undefined || this.observers[i] === undefined) {\n      return;\n    }\n\n    delete this.observers[i];\n\n    this.observerCount -= 1;\n    if (this.observerCount === 0 && this.onNoObservers !== undefined) {\n      this.onNoObservers(this);\n    }\n  }\n\n  private forEachObserver(fn: (observer: Observer<T>) => void): void {\n    if (this.finalized) {\n      // Already closed by previous event....just eat the additional values.\n      return;\n    }\n\n    // Since sendOne calls asynchronously - there is no chance that\n    // this.observers will become undefined.\n    for (let i = 0; i < this.observers!.length; i++) {\n      this.sendOne(i, fn);\n    }\n  }\n\n  // Call the Observer via one of it's callback function. We are careful to\n  // confirm that the observe has not been unsubscribed since this asynchronous\n  // function had been queued.\n  private sendOne(i: number, fn: (observer: Observer<T>) => void): void {\n    // Execute the callback asynchronously\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.task.then(() => {\n      if (this.observers !== undefined && this.observers[i] !== undefined) {\n        try {\n          fn(this.observers[i]);\n        } catch (e) {\n          // Ignore exceptions raised in Observers or missing methods of an\n          // Observer.\n          // Log error to console. b/31404806\n          if (typeof console !== 'undefined' && console.error) {\n            console.error(e);\n          }\n        }\n      }\n    });\n  }\n\n  private close(err?: Error): void {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    if (err !== undefined) {\n      this.finalError = err;\n    }\n    // Proxy is no longer needed - garbage collect references\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.task.then(() => {\n      this.observers = undefined;\n      this.onNoObservers = undefined;\n    });\n  }\n}\n\n/** Turn synchronous function into one called asynchronously. */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function async(fn: Function, onError?: ErrorFn): Function {\n  return (...args: unknown[]) => {\n    Promise.resolve(true)\n      .then(() => {\n        fn(...args);\n      })\n      .catch((error: Error) => {\n        if (onError) {\n          onError(error);\n        }\n      });\n  };\n}\n\n/**\n * Return true if the object passed in implements any of the named methods.\n */\nfunction implementsAnyMethods(\n  obj: { [key: string]: unknown },\n  methods: string[]\n): boolean {\n  if (typeof obj !== 'object' || obj === null) {\n    return false;\n  }\n\n  for (const method of methods) {\n    if (method in obj && typeof obj[method] === 'function') {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction noop(): void {\n  // do nothing\n}\n", "/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Check to make sure the appropriate number of arguments are provided for a public function.\n * Throws an error if it fails.\n *\n * @param fnName The function name\n * @param minCount The minimum number of arguments to allow for the function call\n * @param maxCount The maximum number of argument to allow for the function call\n * @param argCount The actual number of arguments provided.\n */\nexport const validateArgCount = function (\n  fnName: string,\n  minCount: number,\n  maxCount: number,\n  argCount: number\n): void {\n  let argError;\n  if (argCount < minCount) {\n    argError = 'at least ' + minCount;\n  } else if (argCount > maxCount) {\n    argError = maxCount === 0 ? 'none' : 'no more than ' + maxCount;\n  }\n  if (argError) {\n    const error =\n      fnName +\n      ' failed: Was called with ' +\n      argCount +\n      (argCount === 1 ? ' argument.' : ' arguments.') +\n      ' Expects ' +\n      argError +\n      '.';\n    throw new Error(error);\n  }\n};\n\n/**\n * Generates a string to prefix an error message about failed argument validation\n *\n * @param fnName The function name\n * @param argName The name of the argument\n * @return The prefix to add to the error thrown for validation.\n */\nexport function errorPrefix(fnName: string, argName: string): string {\n  return `${fnName} failed: ${argName} argument `;\n}\n\n/**\n * @param fnName\n * @param argumentNumber\n * @param namespace\n * @param optional\n */\nexport function validateNamespace(\n  fnName: string,\n  namespace: string,\n  optional: boolean\n): void {\n  if (optional && !namespace) {\n    return;\n  }\n  if (typeof namespace !== 'string') {\n    //TODO: I should do more validation here. We only allow certain chars in namespaces.\n    throw new Error(\n      errorPrefix(fnName, 'namespace') + 'must be a valid firebase namespace.'\n    );\n  }\n}\n\nexport function validateCallback(\n  fnName: string,\n  argumentName: string,\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  callback: Function,\n  optional: boolean\n): void {\n  if (optional && !callback) {\n    return;\n  }\n  if (typeof callback !== 'function') {\n    throw new Error(\n      errorPrefix(fnName, argumentName) + 'must be a valid function.'\n    );\n  }\n}\n\nexport function validateContextObject(\n  fnName: string,\n  argumentName: string,\n  context: unknown,\n  optional: boolean\n): void {\n  if (optional && !context) {\n    return;\n  }\n  if (typeof context !== 'object' || context === null) {\n    throw new Error(\n      errorPrefix(fnName, argumentName) + 'must be a valid context object.'\n    );\n  }\n}\n", "/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from './assert';\n\n// Code originally came from goog.crypt.stringToUtf8ByteArray, but for some reason they\n// automatically replaced '\\r\\n' with '\\n', and they didn't handle surrogate pairs,\n// so it's been modified.\n\n// Note that not all Unicode characters appear as single characters in JavaScript strings.\n// fromCharCode returns the UTF-16 encoding of a character - so some Unicode characters\n// use 2 characters in Javascript.  All 4-byte UTF-8 characters begin with a first\n// character in the range 0xD800 - 0xDBFF (the first character of a so-called surrogate\n// pair).\n// See http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3\n\n/**\n * @param {string} str\n * @return {Array}\n */\nexport const stringToByteArray = function (str: string): number[] {\n  const out: number[] = [];\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i);\n\n    // Is this the lead surrogate in a surrogate pair?\n    if (c >= 0xd800 && c <= 0xdbff) {\n      const high = c - 0xd800; // the high 10 bits.\n      i++;\n      assert(i < str.length, 'Surrogate pair missing trail surrogate.');\n      const low = str.charCodeAt(i) - 0xdc00; // the low 10 bits.\n      c = 0x10000 + (high << 10) + low;\n    }\n\n    if (c < 128) {\n      out[p++] = c;\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192;\n      out[p++] = (c & 63) | 128;\n    } else if (c < 65536) {\n      out[p++] = (c >> 12) | 224;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    } else {\n      out[p++] = (c >> 18) | 240;\n      out[p++] = ((c >> 12) & 63) | 128;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    }\n  }\n  return out;\n};\n\n/**\n * Calculate length without actually converting; useful for doing cheaper validation.\n * @param {string} str\n * @return {number}\n */\nexport const stringLength = function (str: string): number {\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    const c = str.charCodeAt(i);\n    if (c < 128) {\n      p++;\n    } else if (c < 2048) {\n      p += 2;\n    } else if (c >= 0xd800 && c <= 0xdbff) {\n      // Lead surrogate of a surrogate pair.  The pair together will take 4 bytes to represent.\n      p += 4;\n      i++; // skip trail surrogate.\n    } else {\n      p += 3;\n    }\n  }\n  return p;\n};\n", "/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Copied from https://stackoverflow.com/a/2117523\n * Generates a new uuid.\n * @public\n */\nexport const uuidv4 = function (): string {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n    const r = (Math.random() * 16) | 0,\n      v = c === 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n};\n", "/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * The amount of milliseconds to exponentially increase.\n */\nconst DEFAULT_INTERVAL_MILLIS = 1000;\n\n/**\n * The factor to backoff by.\n * Should be a number greater than 1.\n */\nconst DEFAULT_BACKOFF_FACTOR = 2;\n\n/**\n * The maximum milliseconds to increase to.\n *\n * <p>Visible for testing\n */\nexport const MAX_VALUE_MILLIS = 4 * 60 * 60 * 1000; // Four hours, like iOS and Android.\n\n/**\n * The percentage of backoff time to randomize by.\n * See\n * http://go/safe-client-behavior#step-1-determine-the-appropriate-retry-interval-to-handle-spike-traffic\n * for context.\n *\n * <p>Visible for testing\n */\nexport const RANDOM_FACTOR = 0.5;\n\n/**\n * Based on the backoff method from\n * https://github.com/google/closure-library/blob/master/closure/goog/math/exponentialbackoff.js.\n * Extracted here so we don't need to pass metadata and a stateful ExponentialBackoff object around.\n */\nexport function calculateBackoffMillis(\n  backoffCount: number,\n  intervalMillis: number = DEFAULT_INTERVAL_MILLIS,\n  backoffFactor: number = DEFAULT_BACKOFF_FACTOR\n): number {\n  // Calculates an exponentially increasing value.\n  // Deviation: calculates value from count and a constant interval, so we only need to save value\n  // and count to restore state.\n  const currBaseValue = intervalMillis * Math.pow(backoffFactor, backoffCount);\n\n  // A random \"fuzz\" to avoid waves of retries.\n  // Deviation: randomFactor is required.\n  const randomWait = Math.round(\n    // A fraction of the backoff value to add/subtract.\n    // Deviation: changes multiplication order to improve readability.\n    RANDOM_FACTOR *\n      currBaseValue *\n      // A random float (rounded to int by Math.round above) in the range [-1, 1]. Determines\n      // if we add or subtract.\n      (Math.random() - 0.5) *\n      2\n  );\n\n  // Limits backoff to max to avoid effectively permanent backoff.\n  return Math.min(MAX_VALUE_MILLIS, currBaseValue + randomWait);\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Provide English ordinal letters after a number\n */\nexport function ordinal(i: number): string {\n  if (!Number.isFinite(i)) {\n    return `${i}`;\n  }\n  return i + indicator(i);\n}\n\nfunction indicator(i: number): string {\n  i = Math.abs(i);\n  const cent = i % 100;\n  if (cent >= 10 && cent <= 20) {\n    return 'th';\n  }\n  const dec = i % 10;\n  if (dec === 1) {\n    return 'st';\n  }\n  if (dec === 2) {\n    return 'nd';\n  }\n  if (dec === 3) {\n    return 'rd';\n  }\n  return 'th';\n}\n", "/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface Compat<T> {\n  _delegate: T;\n}\n\nexport function getModularInstance<ExpService>(\n  service: Compat<ExpService> | ExpService\n): ExpService {\n  if (service && (service as Compat<ExpService>)._delegate) {\n    return (service as Compat<ExpService>)._delegate;\n  } else {\n    return service as ExpService;\n  }\n}\n"],
  "mappings": "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",
  "names": ["stringToByteArray", "querystring"]
}
